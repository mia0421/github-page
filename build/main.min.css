@charset "UTF-8";
/*@import "icons/*.png";*/
/*compass 垂直韻律規則設定
http://www.slideshare.net/sfismy/vertical-rhythm
http://ithelp.ithome.com.tw/question/10155937

compass 垂直韻律功能 @include
Margin向上推N行:leader(n)
Padding向上推N行:padding-leader(n)
Margin向下推N行:trailer(n)
Padding向下推N行:padding-trailer(n)
上述功能綜合用法:rhythm(n,n,n,n)
元素文字大小與行距:adjust-font-size-to ($font-large) 

*/
/* 	global-box-sizing  設定你padding 的呈現方式
	預設padding是會將原本的元素擠開增加寬度或高度
	所以css3 有一設定為 border-sizing 
	content-box: 預設值會將元素擠開
	border-box: 設定之後padding值將會包含在寬度高度中;
	susy 建議加上 不要讓padding影響排版
	html {
	  box-sizing: border-box;
	}
	*, *:before, *:after {
	  box-sizing: inherit;
	}
*/
/*	gutter-position columns的間隙呈現方式
	飯粒網頁 http://sassmeister.com/gist/5a455bcc79a743599f8e
	before 在columns左邊
	after  在columns 右邊
	split  平均分佈在columns 2邊
	inside 包含在columns內columns將會連在一起
	inside-static
*/
/*
	debug image 設定
	show 顯示colums 
	hide  隱藏colums
	show-columns 只顯示colums 不顯示baseline 線（如果有設定）
	show-baseline  只顯示baseline 不顯示colums 
*/
/*讓padding 不稱寬欄寬列高*/
@import url(../node_modules/bootstrap/dist/css/bootstrap.css);
@import url(../librart/TimeLine/css/reset.css);
@import url(../librart/TimeLine/css/style.css);
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: border-box; }

/*用跑回圈方式 跑出每個colums的class
這樣就可以直接使用 */
.grid_1 {
  width: 6.77966%;
  float: left;
  margin-right: 1.69492%; }

.grid_2 {
  width: 15.25424%;
  float: left;
  margin-right: 1.69492%; }

.grid_3 {
  width: 23.72881%;
  float: left;
  margin-right: 1.69492%; }

.grid_4 {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%; }

.grid_5 {
  width: 40.67797%;
  float: left;
  margin-right: 1.69492%; }

.grid_6 {
  width: 49.15254%;
  float: left;
  margin-right: 1.69492%; }

.grid_7 {
  width: 57.62712%;
  float: left;
  margin-right: 1.69492%; }

.grid_8 {
  width: 66.10169%;
  float: left;
  margin-right: 1.69492%; }

.grid_9 {
  width: 74.57627%;
  float: left;
  margin-right: 1.69492%; }

.grid_10 {
  width: 83.05085%;
  float: left;
  margin-right: 1.69492%; }

.grid_11 {
  width: 91.52542%;
  float: left;
  margin-right: 1.69492%; }

.grid_12 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }

/*	RWD 當頁面到什麼大小的時候寫不同的設定
	susy-breakpoint 
	第一個參數是大小超過多大顯示
	第二個參數可以載入不同的grid設定

	$susyPc: (
		columns:12 , 
		gutters:.25, 
		gutter-position:after
	);
	$susyPhone: (
		columns:12 , 
		gutters:0, 
		gutter-position:after
	);

	@include susy-breakpoint(960px,$susyPc ) {}
	@include susy-breakpoint(360px,$susyPhone ) {}
*/
/*  關於span Mixin & funcion 
	1. 當父元素只佔了6 columns 子元素想佔 6欄中的一欄必須
		**包在span裡面**
		.main {
			@include span(6){
				.child {
					@include span(1)
				}	
			}  
		}
		**寫在外面用of **
		.main {
			@include span(6)
			.child {
				@include span(1 of 6)
			}	 
		}

	2. 今天欄想向左或向右推擠欄
		** 用at (但必須用isolate) **
		.main {
			@include span(isolate 1 at 3 )
		}
		
		** span function的功能 **
		這位碰到gutter的問題可以用wide或wider來解決
		wide： 在推1 gutter
		wider：在推2 gutter

		.main {
			margin-left: span(4 wide);
		}
	 	
	 	** 當今天gutter-position是用split、inside、inside-static （間距是用padding來推的） **
	 	.main{  
		    @include span(5 nest); //加上關鍵字 nest清除padding的gutter  
		}  
*/
/*//練習
$susyTest: (
	columns:12 , 
	gutters:.25, 
	gutter-position: after
);
.cont2 {
	@include container;
	@include susy-breakpoint(960px, $susyTest) {
		@include container;
		.a1 {
			@include span(1);
			margin-left: span(4 wide);
		}
	};
}
.a1 {
	height: 50px;
	background-color: blue;
}

.a2 {
	@include span(4);
	background-color: pink;
}	*/
body {
  position: relative; }

.cont {
  /*susy 提供的api 可以建立出一個元素要用來放columns
  也可以帶入寬度 ex: 960px */
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 0; }
  .cont:after {
    content: " ";
    display: block;
    clear: both; }
  .cont * {
    font-size: 16px;
    line-height: 24px; }

.menu {
  background-color: #ffffff; }
  .menu .navbar-collapse {
    padding: 0 30px; }

.Home {
  height: 100vh;
  background: transparent;
  text-align: center; }
  .Home p {
    color: white;
    font-size: 96px;
    line-height: 120px;
    padding-top: 144px; }

.Skill {
  /*RWD 當頁面到什麼大小的時候寫不同的設定
  	susy-breakpoint 
  	第一個參數是大小超過多大顯示
  	第二個參數可以載入不同的grid設定
  */ }
  .Skill > div {
    margin-top: 24px; }
  .Skill > div:last-child {
    margin-bottom: 24px; }
  @media (min-width: 0px) {
    .Skill {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto; }
      .Skill:after {
        content: " ";
        display: block;
        clear: both; }
      .Skill > div {
        width: 82.75862%;
        float: left;
        margin-right: 3.44828%;
        margin-left: 13.7931%;
        margin-right: 13.7931%; }
      .Skill span {
        display: block;
        margin-bottom: 24px; } }
  @media (min-width: 1280px) {
    .Skill {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto; }
      .Skill:after {
        content: " ";
        display: block;
        clear: both; }
      .Skill > div {
        width: 49.15254%;
        float: left;
        margin-right: 1.69492%;
        margin-left: 32.20339%;
        margin-right: 23.72881%; }
      .Skill span {
        display: inline-block;
        margin-right: 5px; } }

.Exp pre {
  background-color: inherit; }

.Autobiography {
  min-height: 100vh;
  margin-left: 8.47458%;
  margin-right: 8.47458%; }
  .Autobiography pre {
    background-color: inherit; }

.About {
  background-color: black;
  min-height: 100vh;
  color: White;
  background-image: url("../img/bg.png");
  background-repeat: repeat;
  padding-top: 72px; }
  @media (min-width: 0px) {
    .About {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
      margin-bottom: 24px; }
      .About:after {
        content: " ";
        display: block;
        clear: both; }
      .About .img {
        margin-left: 17.24138%;
        width: 65.51724%;
        float: left;
        margin-right: 3.44828%; }
      .About .aboutMe {
        margin-left: 34.48276%;
        width: 65.51724%;
        float: left;
        margin-right: 3.44828%; }
        .About .aboutMe div {
          margin-bottom: 24px; }
        .About .aboutMe span {
          margin-left: 10px; } }
  @media (min-width: 1280px) {
    .About {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto; }
      .About:after {
        content: " ";
        display: block;
        clear: both; }
      .About .img {
        width: 23.72881%;
        float: left;
        margin-right: 1.69492%;
        margin-left: 16.94915%; }
      .About .aboutMe {
        width: 32.20339%;
        float: left;
        margin-right: 1.69492%;
        margin-left: 0%; }
        .About .aboutMe div {
          margin-bottom: 24px; }
        .About .aboutMe span {
          margin-left: 10px; } }

/*@include all-icons-sprites;*/



/*# sourceMappingURL=data:application/json;base64, */